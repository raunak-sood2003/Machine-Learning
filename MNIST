#Imports
import tensorflow as tf
from tensorflow.keras.datasets import mnist
from tensorflow.keras.layers import Dense, Flatten
from tensorflow.keras.models import Sequential
import matplotlib.pyplot as plt
import numpy as np
#Model Fitting
(X_train, y_train), (X_val, y_val) = mnist.load_data()
X_train = tf.keras.utils.normalize(X_train,axis = 1)
X_test = tf.keras.utils.normalize(X_val,axis = 1)
model = Sequential()
model.add(Flatten())
model.add(Dense(128, activation = 'relu'))
model.add(Dense(128, activation = 'relu'))
model.add(Dense(10, activation = 'softmax'))
model.compile(optimizer = 'adam',loss ='sparse_categorical_crossentropy',metrics = ['accuracy'])
model.fit(X_train, y_train, epochs = 4)
#Predicting
n = 3
predict = model.predict(X_val)
plt.imshow(X_val[n])
plt.show()
print(np.argmax(predict[n]))
